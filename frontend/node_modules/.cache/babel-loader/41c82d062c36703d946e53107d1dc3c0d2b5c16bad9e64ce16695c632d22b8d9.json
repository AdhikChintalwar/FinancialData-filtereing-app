{"ast":null,"code":"var _jsxFileName = \"/Users/adhik_chintalwar/financial-data-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filters, setFilters] = useState({\n    startDate: \"\",\n    endDate: \"\",\n    minRevenue: \"\",\n    maxRevenue: \"\",\n    minNetIncome: \"\",\n    maxNetIncome: \"\"\n  });\n  const [sortBy, setSortBy] = useState({\n    key: \"date\",\n    order: \"asc\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const apiKey = \"<0000320193>\"; // Replace with your API key\n        const response = await axios.get(`https://financialmodelingprep.com/api/v3/income-statement/AAPL?period=annual`);\n        setData(response.data);\n        setFilteredData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // const handleFilter = () => {\n  //   const filtered = data.filter((item) => {\n  //     const date = new Date(item.date).getFullYear();\n  //     const withinDateRange =\n  //       (!filters.startDate || date >= parseInt(filters.startDate)) &&\n  //       (!filters.endDate || date <= parseInt(filters.endDate));\n  //     const withinRevenueRange =\n  //       (!filters.minRevenue || item.revenue >= filters.minRevenue) &&\n  //       (!filters.maxRevenue || item.revenue <= filters.maxRevenue);\n  //     const withinNetIncomeRange =\n  //       (!filters.minNetIncome || item.netIncome >= filters.minNetIncome) &&\n  //       (!filters.maxNetIncome || item.netIncome <= filters.maxNetIncome);\n  //     return withinDateRange && withinRevenueRange && withinNetIncomeRange;\n  //   });\n  //   setFilteredData(filtered);\n  // };\n\n  // const handleSort = (key) => {\n  //   const order = sortBy.key === key && sortBy.order === \"asc\" ? \"desc\" : \"asc\";\n  //   const sorted = [...filteredData].sort((a, b) => {\n  //     if (order === \"asc\") return a[key] > b[key] ? 1 : -1;\n  //     return a[key] < b[key] ? 1 : -1;\n  //   });\n  //   setFilteredData(sorted);\n  //   setSortBy({ key, order });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Apple Financial Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0ZGUIg2C0hHmWOVPsQZhmNt9jrg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","data","setData","filteredData","setFilteredData","filters","setFilters","startDate","endDate","minRevenue","maxRevenue","minNetIncome","maxNetIncome","sortBy","setSortBy","key","order","fetchData","apiKey","response","get","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adhik_chintalwar/financial-data-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filters, setFilters] = useState({\n    startDate: \"\",\n    endDate: \"\",\n    minRevenue: \"\",\n    maxRevenue: \"\",\n    minNetIncome: \"\",\n    maxNetIncome: \"\",\n  });\n  const [sortBy, setSortBy] = useState({ key: \"date\", order: \"asc\" });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const apiKey = \"<0000320193>\"; // Replace with your API key\n        const response = await axios.get(\n          `https://financialmodelingprep.com/api/v3/income-statement/AAPL?period=annual`\n        );\n        setData(response.data);\n        setFilteredData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // const handleFilter = () => {\n  //   const filtered = data.filter((item) => {\n  //     const date = new Date(item.date).getFullYear();\n  //     const withinDateRange =\n  //       (!filters.startDate || date >= parseInt(filters.startDate)) &&\n  //       (!filters.endDate || date <= parseInt(filters.endDate));\n  //     const withinRevenueRange =\n  //       (!filters.minRevenue || item.revenue >= filters.minRevenue) &&\n  //       (!filters.maxRevenue || item.revenue <= filters.maxRevenue);\n  //     const withinNetIncomeRange =\n  //       (!filters.minNetIncome || item.netIncome >= filters.minNetIncome) &&\n  //       (!filters.maxNetIncome || item.netIncome <= filters.maxNetIncome);\n  //     return withinDateRange && withinRevenueRange && withinNetIncomeRange;\n  //   });\n  //   setFilteredData(filtered);\n  // };\n\n  // const handleSort = (key) => {\n  //   const order = sortBy.key === key && sortBy.order === \"asc\" ? \"desc\" : \"asc\";\n  //   const sorted = [...filteredData].sort((a, b) => {\n  //     if (order === \"asc\") return a[key] > b[key] ? 1 : -1;\n  //     return a[key] < b[key] ? 1 : -1;\n  //   });\n  //   setFilteredData(sorted);\n  //   setSortBy({ key, order });\n  // };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Apple Financial Data</h1>\n      {/* <Filters filters={filters} setFilters={setFilters} handleFilter={handleFilter} />\n      <Table data={filteredData} handleSort={handleSort} sortBy={sortBy} /> */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IACrCa,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC;IAAEqB,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAM,CAAC,CAAC;EAEnErB,SAAS,CAAC,MAAM;IACd,MAAMsB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,MAAM,GAAG,cAAc,CAAC,CAAC;QAC/B,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAC9B,8EACF,CAAC;QACDlB,OAAO,CAACiB,QAAQ,CAAClB,IAAI,CAAC;QACtBG,eAAe,CAACe,QAAQ,CAAClB,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOoB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEnB,OAAA;IAAKyB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACpC1B,OAAA;MAAIyB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG9D,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/DID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAiET,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}